# -*- coding: utf-8 -*-
"""ADS Exp 3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1z1oalxf8C64tdvW_KSx7oBjBPHyKYkqc
"""

import pandas as pd
df = pd.read_csv('ADS_dataset.csv')

import matplotlib.pyplot as plt

df = df.fillna(df.mean())

"""**Histogram**"""

plt.hist(df['MaxTemp'])
plt.xlabel("MaxTemp")
plt.ylabel("Frequency")
plt.show()

"""**Quartile**"""

plt.boxplot(df['Humidity9am'], vert=False)
plt.xlabel("Humidity")
plt.show()

"""**Distribution Chart**"""

import seaborn as sns

sns.distplot(df['MinTemp'])
plt.xlabel('MinTemp')
plt.ylabel('Density')
plt.show()

"""**Join Plot**"""

sns.jointplot(x ='MinTemp', y ='MaxTemp', data = df)

"""**Rug Plot**"""

plt.figure(figsize=(15,5))
sns.rugplot(data=df, x ="MinTemp")
plt.show()

"""**Column Chart**"""

df1 = df.head(10)
df1.plot.bar()
plt.bar(df1['MinTemp'], df1['Rainfall'])
plt.xlabel("MinTemp")
plt.ylabel("Rainfall")
plt.show()

"""**Scatter Plot**"""

plt.scatter(df['Humidity3pm'],df['Rainfall'])
plt.xlabel('Humidity3pm')
plt.ylabel('Rainfall')
plt.show()

"""**Scatter Matrix**"""

pd.plotting.scatter_matrix(df, figsize=(10, 10))
plt.show()

"""**Bubble chart**"""

import plotly.express as px

fig = px.scatter(df.head(1000), x="MaxTemp", y="Humidity9am", size="Rainfall")
fig.show()

"""**Density Chart**"""

df['MinTemp'].plot.density()
plt.xlabel('MinTemp')
plt.ylabel('Density')
plt.show()

"""**Parallel chart**"""

fig = px.parallel_coordinates(df.head(100), dimensions=['WindSpeed9am','Humidity9am','Temp9am'],
                              color_continuous_scale=px.colors.diverging.Tealrose,
                              color_continuous_midpoint=2)
fig.show()

"""**Deviation chart**"""

df2 = df[['MinTemp', 'MaxTemp']].head(100)
df2
std_y = df2['MaxTemp'].std()

df2['y_error'] = std_y

plt.errorbar(x=df2['MinTemp'], y=df2['MaxTemp'], yerr=df2['y_error'])

plt.xlabel('MinTemp')
plt.ylabel('MaxTemp')
plt.show()

"""**Andrews Curves**"""

df3 = df[['WindSpeed9am','Humidity9am','Location']].head(30000)
x = pd.plotting.andrews_curves(df3,'Location')
x.plot() 
plt.show()

"""**Correlation**"""

corr = df.corr()
corr.style.background_gradient(cmap='coolwarm').set_precision(2)

"""**Heatmap**"""

plt.figure(figsize=(8,8),dpi=300)
g=sns.heatmap(corr, square=True,
            center=0, annot=True, linewidths=.5,
            cmap="RdBu_r", cbar_kws={"shrink": 0.8},vmin=-1,vmax=1, annot_kws={'size': 5});
g.set_xticklabels(g.get_xticklabels(),rotation=45,fontsize=5,ha='right')
g.set_yticklabels(g.get_yticklabels(),fontsize=5,ha='right')
plt.title('Heatmap', fontsize=5)