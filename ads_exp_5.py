# -*- coding: utf-8 -*-
"""ADS Exp 5.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/18Afco3v-uzeg2FxU8xgdKNH-nwBCZIsE
"""

import numpy as np
import pandas as pd
from sklearn.cluster import KMeans
import matplotlib.pyplot as plt
from sklearn.preprocessing import StandardScaler
import warnings
warnings.filterwarnings("ignore")

df = pd.read_csv("ADS_dataset.csv")
df.head()

df = df.fillna(df.mean())
df.head()

df.drop(['Date', 'Location', 'WindGustDir', 'WindDir9am', 'WindDir3pm', 'RainTomorrow'], axis='columns', inplace=True)
df['RainToday'] = df['RainToday'].fillna('No')
df.head()

#encoding
df.RainToday = df.RainToday.map({'Yes': 1, 'No': 0})
df.head()

inputs = df.drop('RainToday',axis='columns')
target = df['RainToday']

from sklearn.preprocessing import MinMaxScaler

#normalize
scaler = MinMaxScaler()
scaler.fit(inputs)
df_normalized = pd.DataFrame(scaler.transform(inputs), columns=inputs.columns)
df_normalized.head()

kmeans = KMeans(n_clusters=3, init='k-means++', random_state=42)
pred_y = kmeans.fit_predict(df_normalized)

plt.scatter(df_normalized['MinTemp'], df_normalized['MaxTemp'],c=pred_y, cmap='viridis')
plt.title('K-Means Clustering')
plt.xlabel('MinTemp')
plt.ylabel('MaxTemp')
plt.show()

from sklearn.metrics import rand_score, adjusted_rand_score, mutual_info_score, silhouette_score
ri = rand_score(target, pred_y)
ari = adjusted_rand_score(target, pred_y)
mi = mutual_info_score(target, pred_y)
sc = silhouette_score(df_normalized, pred_y)

print('Rand index:', ri)
print('Adjusted Rand index:', ari)
print('Mutual information:', mi)
print('Silhouette coefficient:', sc)